---
type navigationItems = { href: string; title: string }[];

const navigationItems: navigationItems = [
  { href: "/", title: "HOME" },
  { href: "/about/", title: "ABOUT" },
  { href: "/works/", title: "WORKS" },
];
const path: string = Astro.url.pathname;
---

<nav>
  <ul>
    {
      navigationItems.map((item) =>
        path === item.href ? (
          <li>
            <a href={item.href} class="current">
              {item.title}
            </a>
          </li>
        ) : (
          <li>
            <a href={item.href}>{item.title}</a>
          </li>
        )
      )
    }
  </ul>
</nav>

<style lang="scss">
  nav {
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 1000;
    width: 100%;
    @media (min-width: 768px) {
      bottom: auto;
      top: 10%;
    }
  }
  ul {
    display: flex;
    align-items: center;
    @media (min-width: 768px) {
      flex-direction: column;
      align-items: stretch;
    }
  }
  li {
    width: 100%;
    overflow: hidden;
    @media (min-width: 768px) {
      width: 80px;
      box-shadow: 5px 4px 0 var(--color-main), 0 4px 0 var(--color-main);
      &:first-child {
        border-radius: 0 1rem 0 0;
      }
      &:last-child {
        border-radius: 0 0 1rem 0;
      }
    }
    &:not(:last-child) {
      border-right: 2px solid var(--color-main);
      @media (min-width: 768px) {
        border-right: none;
        border-bottom: 2px solid var(--color-main);
      }
    }
  }
  a {
    display: block;
    width: 100%;
    padding: 1rem 0;
    font-size: 0.75rem;
    font-weight: 700;
    text-align: center;
    text-decoration: none;
    background: #e5e5e5;
    color: var(--color-main);
    transition: background-color 0.1s ease-in-out, color 0.1s ease-in-out;
    &.current {
      background-color: var(--color-main);
      color: #ffffff;
      pointer-events: none;
    }
    @media (min-width: 768px) {
      padding: 2rem 0;
      &:hover {
        background-color: var(--color-main);
        color: #ffffff;
      }
    }
  }
</style>
